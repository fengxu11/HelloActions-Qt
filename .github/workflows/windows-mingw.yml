name: Windows MinGW

on: 
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Version tag"
        required: true
        default: "0.0.1"

jobs:
  build:
    name: Build
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          - qt_arch: win32_mingw53
            qt_ver: 5.9.9
            qt_tools: "tools_mingw,5.3.0-2,qt.tools.win32_mingw530"
            qt_tools_mingw_install: mingw530_32
          - qt_arch: win32_mingw73
            qt_ver: 5.12.10
            qt_tools: "tools_mingw,7.3.0-1-202004170606,qt.tools.win32_mingw730"
            qt_tools_mingw_install: mingw730_32
          # 可以继续添加更多配置
    env:
      targetName: HelloActions-Qt.exe

    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          aqtversion: '==2.0.5'
          arch: ${{ matrix.qt_arch }}
          tools: ${{ matrix.qt_tools }}
          cached: 'false'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Qt 5 environment configuration
        if: ${{ startsWith(matrix.qt_ver, '5') }}
        shell: pwsh
        run: |
          Write-Output "${{ env.Qt5_DIR }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Write-Output "${{ env.Qt5_DIR }}/../../Tools/${{ matrix.qt_tools_mingw_install }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: where is qmake & where is mingw32-make
        shell: pwsh
        run: |
          Write-Host "qmake path:"
          Get-Command -Name 'qmake'
          Write-Host "mingw32-make path:"
          Get-Command -Name 'mingw32-make'

      - name: mingw-build
        shell: cmd
        run: |
          qmake
          mingw32-make

      - name: package
        env:
          archiveName: ${{ matrix.qt_ver }}-${{ matrix.qt_arch }}
        shell: pwsh
        run: |
          $name = "${env:archiveName}"
          echo "packageName=$name" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.packageName }}
          path: ${{ env.packageName }}

      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.packageName }}.zip
          asset_name: ${{ env.packageName }}.zip
          tag: ${{ github.ref }}
          overwrite: true
