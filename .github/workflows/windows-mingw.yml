name: Windows MinGW

on: 
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Version tag"
        required: true
        default: "0.0.1"

jobs:
  build:
    name: Build
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          - qt_arch: win32_mingw81
            qt_ver: 5.15.2
            qt_tools: "tools_mingw,8.1.0-1-202004170606,qt.tools.win32_mingw810"
            qt_tools_mingw_install: mingw810_32
          - qt_arch: win64_mingw81
            qt_ver: 5.15.2
            qt_tools: "tools_mingw,8.1.0-1-202004170606,qt.tools.win64_mingw810"
            qt_tools_mingw_install: mingw810_64
          # 可以继续添加更多配置
    env:
      targetName: ./bin/release/HelloActions-Qt.exe

    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          aqtversion: '==2.0.5'
          arch: ${{ matrix.qt_arch }}
          tools: ${{ matrix.qt_tools }}
          cached: 'false'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Qt 5 environment configuration
        if: ${{ startsWith(matrix.qt_ver, '5') }}
        shell: pwsh
        run: |
          Write-Output "${{ env.Qt5_DIR }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Write-Output "${{ env.Qt5_DIR }}/../../Tools/${{ matrix.qt_tools_mingw_install }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: where is qmake & where is mingw32-make
        shell: pwsh
        run: |
          Write-Host "qmake path:"
          Get-Command -Name 'qmake'
          Write-Host "mingw32-make path:"
          Get-Command -Name 'mingw32-make'

      - name: mingw-build
        shell: cmd
        run: |
          qmake CONFIG+=static 
          mingw32-make || exit /b 1
          dir

      - name: Debug directory structure
        shell: pwsh
        run: |
          Write-Host "Current directory content:"
          Get-ChildItem -Path .
          Write-Host "Bin directory content:"
          Get-ChildItem -Path ./bin
          Write-Host "Release directory content:"
          Get-ChildItem -Path ./bin/release

      - name: package
        env:
          archiveName: v${{ inputs.tag }}-${{ matrix.qt_ver }}-${{ matrix.qt_arch }}
          targetName: ${{ env.targetName }}
        shell: pwsh
        run: |
          if (Test-Path -Path $env:targetName) {
            Compress-Archive -Path $env:targetName -DestinationPath "$env:archiveName.zip"
            Write-Host "Archive created: $env:archiveName.zip"
          } else {
            Write-Host "Error: Target file '$env:targetName' not found."
            exit 1
          }

      - name: Debug upload artifact
        run: |
          echo "Artifact name: Artifact-${{ matrix.qt_arch }}"
          echo "File path: v${{ inputs.tag }}-${{ matrix.qt_ver }}-${{ matrix.qt_arch }}.zip"
          ls ./v${{ inputs.tag }}-${{ matrix.qt_ver }}-${{ matrix.qt_arch }}.zip

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.tag }}
          files: v${{ inputs.tag }}-${{ matrix.qt_ver }}-${{ matrix.qt_arch }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}


